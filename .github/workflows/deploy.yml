name: Build and Deploy Container App to Azure

on:
  push:
    branches:
      - main  # Trigger on pushes to the main branch

env:
  REGISTRY_NAME: dmoneycontainerregistry  # Replace with your ACR name
  REGISTRY_LOCATION: westeurope           # Replace with your desired location
  REGISTRY_SKU: Basic                     # Replace with your desired SKU
  IMAGE_BASE_NAME: dmoneyimage            # Replace with your container image name

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout code
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Log in to Azure
    - name: Log in to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    # Step 3: Ensure ACR exists
    - name: Ensure ACR exists
      run: |
        if ! az acr show --name ${{ env.REGISTRY_NAME }} &>/dev/null; then
          az acr create --name ${{ env.REGISTRY_NAME }} --resource-group BCSAI2024-DEVOPS-STUDENTS-A-DEV --sku ${{ env.REGISTRY_SKU }} --location ${{ env.REGISTRY_LOCATION }} --admin-enabled true
        else
          echo "ACR ${{ env.REGISTRY_NAME }} already exists."
        fi

    # Step 4: Fetch ACR credentials dynamically
    - name: Fetch ACR credentials
      id: acr-credentials
      run: |
        echo "Fetching ACR credentials..."
        echo "::set-output name=username::$(az acr credential show --name ${{ env.REGISTRY_NAME }} --query "username" -o tsv)"
        echo "::set-output name=password::$(az acr credential show --name ${{ env.REGISTRY_NAME }} --query "passwords[0].value" -o tsv)"

    # Step 5: Log in to Azure Container Registry
    - name: Log in to Azure Container Registry
      uses: azure/docker-login@v1
      with:
        login-server: ${{ env.REGISTRY_NAME }}.azurecr.io
        username: ${{ steps.acr-credentials.outputs.username }}
        password: ${{ steps.acr-credentials.outputs.password }}

    # Step 6: Set image version
    - name: Set image version
      id: image-version
      run: echo "::set-output name=version::$(date +'%Y%m%d%H%M%S')"

    # Step 7: Build and push the Docker image
    - name: Build and push image
      run: |
        docker build . -t ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.IMAGE_BASE_NAME }}:${{ steps.image-version.outputs.version }}
        docker push ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.IMAGE_BASE_NAME }}:${{ steps.image-version.outputs.version }}

    # Step 8: Deploy Docker image to Azure Web App
    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v3
      with:
        app-name: dmoneyWebApp  # Replace with your Azure Web App name
        images: ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.IMAGE_BASE_NAME }}:${{ steps.image-version.outputs.version }}
