name: Build and Deploy Container App to Azure

on:
  push:
    branches:
      - main  # Trigger on pushes to the main branch

env:
  REGISTRY_LOGIN_SERVER: dmoneycontainerregistry.azurecr.io  # Replace with your Azure Container Registry login server
  IMAGE_BASE_NAME: dmoneyimage                               # Replace with your container image name

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout code
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Log in to Azure
    - name: Log in to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    # Step 3: Log in to Azure Container Registry (ACR)
    - name: Log in to Azure Container Registry
      uses: azure/docker-login@v1
      with:
        login-server: ${{ env.REGISTRY_LOGIN_SERVER }}
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}

    # Step 4: Set image version
    - name: Set image version
      id: image-version
      run: echo "::set-output name=version::$(date +'%Y%m%d%H%M%S')"

    # Step 5: Build and push the Docker image
    - name: Build and push image
      run: |
        docker build . -t ${{ env.REGISTRY_LOGIN_SERVER }}/${{ env.IMAGE_BASE_NAME }}:${{ steps.image-version.outputs.version }}
        docker push ${{ env.REGISTRY_LOGIN_SERVER }}/${{ env.IMAGE_BASE_NAME }}:${{ steps.image-version.outputs.version }}

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-publish  # This job runs after the build-and-publish job

    steps:
    # Step 1: Log in to Azure
    - name: Log in to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    # Step 2: Deploy Docker image to Azure Web App
    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v3
      with:
        app-name: dmoneyWebApp  # Replace with your Azure Web App name
        images: ${{ env.REGISTRY_LOGIN_SERVER }}/${{ env.IMAGE_BASE_NAME }}:${{ steps.image-version.outputs.version }}
