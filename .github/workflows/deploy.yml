name: Build, Deploy Resources, and Deploy App

on:
  push:
    branches:
      - main  # Trigger on push to the main branch

env:
  REGISTRY_NAME: dmoneycontainerregistry
  REGISTRY_LOCATION: westeurope
  REGISTRY_SKU: Basic
  IMAGE_BASE_NAME: dmoneyimage
  WEB_APP_NAME: dmoneyWebApp
  RESOURCE_GROUP: BCSAI2024-DEVOPS-STUDENTS-A-DEV

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the repository
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Log in to Azure
    - name: Log in to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    # Step 3: Create or ensure resources exist
    - name: Deploy infrastructure using Bicep
      run: |
        az deployment group create \
          --resource-group ${{ env.RESOURCE_GROUP }} \
          --template-file main.bicep \
          --parameters dmoneyContainerRegistryName=${{ env.REGISTRY_NAME }} \
                       dmoneyAppServicePlanName=dmoneyAppServicePlan \
                       dmoneyWebAppName=${{ env.WEB_APP_NAME }} \
                       location=${{ env.REGISTRY_LOCATION }}

    # Step 4: Fetch ACR credentials dynamically
    - name: Fetch ACR credentials
      id: acr-credentials
      run: |
        echo "Fetching ACR credentials..."
        echo "::set-output name=username::$(az acr credential show --name ${{ env.REGISTRY_NAME }} --query "username" -o tsv)"
        echo "::set-output name=password::$(az acr credential show --name ${{ env.REGISTRY_NAME }} --query "passwords[0].value" -o tsv)"

    # Step 5: Log in to Azure Container Registry
    - name: Log in to Azure Container Registry
      uses: azure/docker-login@v1
      with:
        login-server: ${{ env.REGISTRY_NAME }}.azurecr.io
        username: ${{ steps.acr-credentials.outputs.username }}
        password: ${{ steps.acr-credentials.outputs.password }}

    # Step 6: Set image version
    - name: Set image version
      id: image-version
      run: echo "::set-output name=version::$(date +'%Y%m%d%H%M%S')"

    # Step 7: Build and push Docker image
    - name: Build and push image
      run: |
        docker build . -t ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.IMAGE_BASE_NAME }}:${{ steps.image-version.outputs.version }}
        docker push ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.IMAGE_BASE_NAME }}:${{ steps.image-version.outputs.version }}

    # Step 8: Deploy Docker image to Azure Web App
    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v3
      with:
        app-name: ${{ env.WEB_APP_NAME }}
        images: ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.IMAGE_BASE_NAME }}:${{ steps.image-version.outputs.version }}
